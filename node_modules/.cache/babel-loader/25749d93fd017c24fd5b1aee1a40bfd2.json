{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\react-client\\\\src\\\\components\\\\ShowReward.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction Show(props) {\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"https://localhost:44348/api/rewards/\" + props.match.params.id;\n  useEffect(() => {\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setData(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editReward = id => {\n    props.history.push({\n      pathname: '/editreward/' + id\n    });\n  };\n\n  const deleteReward = id => {\n    setShowLoading(true);\n    const reward = {\n      brand: reward.brand,\n      cost: reward.cost,\n      hasStock: reward.hasStock,\n      id: reward.id,\n      img_url: reward.img_url,\n      value: reward.value\n    };\n    axios.delete(apiUrl, reward).then(result => {\n      setShowLoading(false);\n      props.history.push('/rewards');\n    }).catch(error => setShowLoading(false));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, data.brand, \", \", data.lastName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, data.cost), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, data.value), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => {\n      editReward(data.documentId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Edit Reward\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"danger\",\n    onClick: () => {\n      deleteReward(data.documentId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Delete Reward\"))));\n}\n\nexport default withRouter(Show);","map":{"version":3,"sources":["C:/Users/HP/Documents/react-client/src/components/ShowReward.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Button","withRouter","Show","props","data","setData","showLoading","setShowLoading","apiUrl","match","params","id","fetchData","result","editReward","history","push","pathname","deleteReward","reward","brand","cost","hasStock","img_url","value","delete","then","catch","error","lastName","documentId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction Show(props) {\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"https://localhost:44348/api/rewards/\" + props.match.params.id;\n\n  useEffect(() => {\n    setShowLoading(false);\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setData(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editReward = (id) => {\n    props.history.push({\n      pathname: '/editreward/' + id\n    });\n  };\n\n  const deleteReward = (id) => {\n    setShowLoading(true);\n    const reward = { brand: reward.brand, cost: reward.cost, \n      hasStock: reward.hasStock, id: reward.id, img_url: reward.img_url, value: reward.value};\n  \n    axios.delete(apiUrl, reward)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/rewards')\n      }).catch((error) => setShowLoading(false));\n  };\n\n  return (\n    <div>\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner> }    \n      <Jumbotron>\n        <h1>{data.brand}, {data.lastName}</h1>\n        <p>{data.cost}</p>\n        <p>{data.value}</p>\n\n        <p>\n          <Button type=\"button\" variant=\"primary\" onClick={() => { editReward(data.documentId) }}>Edit Reward</Button>&nbsp;\n          <Button type=\"button\" variant=\"danger\" onClick={() => { deleteReward(data.documentId) }}>Delete Reward</Button>\n        </p>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default withRouter(Show);\n"]},"metadata":{},"sourceType":"module"}